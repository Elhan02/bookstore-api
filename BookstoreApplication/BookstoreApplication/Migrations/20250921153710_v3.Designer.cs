// <auto-generated />
using System;
using BookstoreApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921153710_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Author of Harry Potter",
                            DateOfBirth = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Author of A Song of Ice and Fire",
                            DateOfBirth = new DateTime(1948, 9, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "George R.R. Martin"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Queen of Mystery",
                            DateOfBirth = new DateTime(1890, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Agatha Christie"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "King of Horror",
                            DateOfBirth = new DateTime(1947, 9, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Stephen King"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Science fiction writer",
                            DateOfBirth = new DateTime(1920, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Isaac Asimov"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<int>("YearAwarded")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AwardId = 1,
                            YearAwarded = 2001
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 4,
                            YearAwarded = 2010
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 2,
                            YearAwarded = 1998
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 3,
                            YearAwarded = 2000
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 4,
                            YearAwarded = 2012
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 1,
                            YearAwarded = 1940
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 4,
                            YearAwarded = 1950
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 1,
                            YearAwarded = 1980
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 2,
                            YearAwarded = 1985
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 3,
                            YearAwarded = 1990
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 2,
                            YearAwarded = 1960
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 3,
                            YearAwarded = 1965
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 4,
                            YearAwarded = 1970
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 2,
                            YearAwarded = 2005
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 2,
                            YearAwarded = 1939
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Award for achievements in journalism and literature.",
                            Name = "Pulitzer Prize",
                            StartedAt = new DateTime(1917, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Award for science fiction or fantasy works.",
                            Name = "Hugo Award",
                            StartedAt = new DateTime(1953, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Annual award for the best science fiction or fantasy works.",
                            Name = "Nebula Award",
                            StartedAt = new DateTime(1965, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Literary prize awarded each year for the best original novel.",
                            Name = "Booker Prize",
                            StartedAt = new DateTime(1969, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "978-0439708180",
                            PageCount = 309,
                            PublishedDate = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "978-0439064873",
                            PageCount = 341,
                            PublishedDate = new DateTime(1998, 7, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "978-0553103540",
                            PageCount = 694,
                            PublishedDate = new DateTime(1996, 8, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "A Game of Thrones"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "978-0553108033",
                            PageCount = 768,
                            PublishedDate = new DateTime(1998, 11, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "A Clash of Kings"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "978-0062693662",
                            PageCount = 256,
                            PublishedDate = new DateTime(1934, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "978-0062073488",
                            PageCount = 272,
                            PublishedDate = new DateTime(1939, 11, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "And Then There Were None"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            ISBN = "978-0307743657",
                            PageCount = 447,
                            PublishedDate = new DateTime(1977, 1, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            ISBN = "978-1501142970",
                            PageCount = 1138,
                            PublishedDate = new DateTime(1986, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "It"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            ISBN = "978-0553293357",
                            PageCount = 255,
                            PublishedDate = new DateTime(1951, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Foundation"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            ISBN = "978-0553294385",
                            PageCount = 224,
                            PublishedDate = new DateTime(1950, 12, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "I, Robot"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 4,
                            ISBN = "978-0307743664",
                            PageCount = 199,
                            PublishedDate = new DateTime(1974, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Carrie"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 1,
                            ISBN = "978-0316228534",
                            PageCount = 503,
                            PublishedDate = new DateTime(2012, 9, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "The Casual Vacancy"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "New York, USA",
                            Name = "Penguin Random House",
                            Website = "https://www.penguinrandomhouse.com"
                        },
                        new
                        {
                            Id = 2,
                            Address = "New York, USA",
                            Name = "HarperCollins",
                            Website = "https://www.harpercollins.com"
                        },
                        new
                        {
                            Id = 3,
                            Address = "London, UK",
                            Name = "Macmillan Publishers",
                            Website = "https://us.macmillan.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AuthorAwards");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AuthorAwards");
                });
#pragma warning restore 612, 618
        }
    }
}
